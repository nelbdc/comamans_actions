name: Deployment
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies
        uses: ./.github/actions/cache-deps
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies
        uses: ./.github/actions/cache-deps
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies
        id: cache-deps
        uses: ./.github/actions/cache-deps
        # with:
        #   caching: "false"
      - name: output information
        run: echo "cache used  ${{ steps.cache-deps.outputs.used-cache }}"
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  s3-bucket:
    needs: [build]
    runs-on: ubuntu-latest
    environment: deploy
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read # This is required for actions/checkout
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./dist

      - name: Get aws permissions
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::498713340359:role/open-connect1
      - name: Custom js actions
        id: s3-deploy

        # env:
        #   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        # uses: ./.github/actions/deploy-s3
        uses: ./.github/actions/deploy-s3-docker
        with:
          bucket: custom-action
          bucket-region: us-east-2
          dist-folder: dist
      - name: get url
        run: |
          echo "Lived url: ${{ steps.s3-deploy.outputs.url-website }}"
